<% url_help = Shareabouts::Application.routes.url_helpers %>

$(function() {
  var locate_feature   = $("#locate_feature"),
      finalize_feature = $("#finalize_feature"),
      pages            = $("#pages a"),
      Map              = $("#map");

  var MarkerIcon = L.Icon.extend({
    iconUrl     : '<%= image_path("marker-bike.png") %>',
    iconSize    : new L.Point(25, 25),
    iconAnchor  : new L.Point(12, 12),
    popupAnchor : new L.Point(0, 0),
    shadowSize  : new L.Point(0, 0)
  });

  var FocusedMarkerIcon = L.Icon.extend({
    iconUrl     : '<%= image_path("marker-bike-focus.png") %>',
    iconSize    : new L.Point(25, 41),
    iconAnchor  : new L.Point(13, 41),
    popupAnchor : new L.Point(0, -33),
    shadowSize  : new L.Point(41, 41),
    shadowUrl   : '<%= image_path("marker-shadow.png") %>'
  });

  var NewMarkerIcon = L.Icon.extend({
    iconUrl     : '<%= image_path("marker-bike-new.png") %>',
    iconSize    : new L.Point(25, 41),
    iconAnchor  : new L.Point(13, 41),
    popupAnchor : new L.Point(0, -33),
    shadowSize  : new L.Point(41, 41),
    shadowUrl   : '<%= image_path("marker-shadow.png") %>'
  });

  var CrosshairIcon = L.Icon.extend({
    iconUrl     : '<%= image_path("crosshair.png") %>',
    iconSize    : new L.Point(63, 64),
    iconAnchor  : new L.Point(33,32),
    popupAnchor : new L.Point(0,0),
    shadowSize  : new L.Point(0,0) // no shadow
  });

  var ZoomedOutIcon = L.Icon.extend({
    iconUrl     : '<%= image_path("marker-dot.png") %>',
    iconSize    : new L.Point(18,18),
    iconAnchor  : new L.Point(9,9),
    popupAnchor : new L.Point(0,0),
    shadowSize  : new L.Point(0,0) // no shadow
  });

  function getScrollBarWidth () {
    var inner = document.createElement('p');
    inner.style.width = "100%";
    inner.style.height = "200px";

    var outer = document.createElement('div');
    outer.style.position = "absolute";
    outer.style.top = "0px";
    outer.style.left = "0px";
    outer.style.visibility = "hidden";
    outer.style.width = "200px";
    outer.style.height = "150px";
    outer.style.overflow = "hidden";
    outer.appendChild (inner);

    document.body.appendChild (outer);
    var w1 = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var w2 = inner.offsetWidth;
    if (w1 == w2) w2 = outer.clientWidth;

    document.body.removeChild (outer);

    return (w1 - w2);
  };

  // Init the slider for filtering the results by popularity
  var initPopularitySlider = function(values) {
    // Popularity Filter
    $('#filter').hiderslider({
      title: 'Filter by Popularity',
      slider: {
        max: values.length-1,
        slide: function(e, data) {
          Map.shareabout('filterByPopularity', values[data.value]);
        },
        change: function(e, data) {
          Map.shareabout('filterByPopularity', values[data.value]);
        }
      }
    });
  };

  /**
   * @param {L.LatLng} latlng The location to translate to query string
   */
  var latLngToQueryString = function(latlng) {
    return "latitude=" + latlng.lat + "&longitude=" + latlng.lng;
  };

  // Get the scrollbar width and save it to our namespaced object
  window.shareabouts.scrollBarWidth =  getScrollBarWidth();

  // Initialize shareabouts map
  Map.shareabout({
    map : {
      maxZoom   : window.shareabouts.map_max_zoom,
      minZoom   : window.shareabouts.map_min_zoom,
      maxBounds : window.shareabouts.map_bounds,
      center    : window.shareabouts.map_center || new L.LatLng(40.719991, -73.999530),
      zoomAnimation : false
    },
    tileUrl          : 'http://{s}.tile.cloudmade.com/c86f4f94b9394b3690b40366659a988e/3697/256/{z}/{x}/{y}.png',
    tileAttribution  : '&copy; 2012 <a target="_blank" href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a target="_blank" href="http://creativecommons.org/licenses/by-sa/2.0/">CCBYSA</a>, Imagery <a target="_blank" href="http://cloudmade.com">CloudMade</a>',
    tileOverlayUrls  : [
      'https://tiles.mapbox.com/v3/chitransit.chicago_transit_overlay/{z}/{x}/{y}.png'
    ],
    markerIcon: new MarkerIcon(),
    focusedMarkerIcon: new FocusedMarkerIcon(),
    newMarkerIcon: new NewMarkerIcon(),
    crosshairIcon   : new CrosshairIcon(),
    zoomedOutIcon : new ZoomedOutIcon(),
    zoomThreshold : 13,
    locationTypeMarkerIcons : window.shareabouts.LocationTypeIcons,
    initialZoom : window.shareabouts.map_initial_zoom,
    callbacks : {
      onready : function(something) {
        locate_feature.show();
        finalize_feature.hide();
      },
      onload : function() {
        // See views/feature_points/index.html.erb
        // TODO: Should this just be handled automatically? A user shouldn't
        // have to know about this, methinks.
        if (window.shareabouts && window.shareabouts.initialFeatureId) {
          Map.shareabout("viewFeature", window.shareabouts.initialFeatureId)
        }

        // Popularity slider only shows up on the desktop
        if ( !Map.shareabout("smallScreen") ) {
          initPopularitySlider(Map.shareabout('getPopularityStats').uniqueVals);
        }
      },
      onpopup : function() {
        locate_feature.hide();
        finalize_feature.hide();

        // Hide mobile dropdown menu if visible
        $('#pages ul').removeClass('active');

        // Reset the margin when it won't overlap the scrollbar
        $('.information-panel .close, .information-panel .information-panel-content-overflow').css('marginRight', '0px');

        // Adjust the close button based on the scrollbar
        $('.page').parents('.information-panel.overflowing').find('.close, .information-panel-content-overflow')
          .css('marginRight', window.shareabouts.scrollBarWidth + 'px');

        if (Map.shareabout("smallScreen") ) {
          // Hide for page content on a small screen
          $('.page').parents('.information-panel').find('.popup-tip-wrapper').hide();
        }
      },
      locateNewFeature: function() {
        // Hide mobile dropdown menu if visible
        $('#pages ul').removeClass('active');
      }
    },
    // Intial feature to show
    initialFeatureId : window.shareabouts.initialFeatureId,
    featuresUrl      : '<%= url_help.feature_points_path %>',
    featureUrl       : '<%= url_help.feature_point_path("FEATURE_ID") %>',
    polygonsUrl      : '<%= url_help.feature_polygons_path %>', // json of coordinates for multipolygon areas
    dragHint         : '<%= I18n.t "map_controls.drag_hint" %>',
    dragHintLong     : '<%= I18n.t "map_controls.drag_hint_long" %>'
  });

  // Register click event within InformationPanel
  Map.shareabout("addClickEventListenerToPopup", "form#new_feature_point input:submit", function(mouseEvent, target){
    var form = $(mouseEvent.target).closest("form");

    Map.shareabout("submitNewFeature", {
      data : form.serialize() + "&" + latLngToQueryString( Map.shareabout("getNewFeatureMarker").getLatLng() ),
      url : form.attr("action")
    });
  });

  // Register click event within InformationPanel
  var throttledVoteCallback = (function() {
    var done = true;
    return function(mouseEvent, target){
      if (done) {
        done = false;
        var $form = $(mouseEvent.target).closest("form"),
            $button = $('button', $form),
            $label = $('.vote-label', $form),
            votes = parseInt($label.text(), 10);

        // Update the state of the button right away
        $button.is('.supported') ? votes-- : votes++;
        $button.toggleClass('supported');
        $label.text(votes);

        $.post( $form.attr("action"), $form.serialize(), function(data) {
          Map.shareabout("getPopup").setContent(data.view);
        },
        "json").complete(function() { done = true; });
      }
    };
  })();
  Map.shareabout("addClickEventListenerToPopup", "form[data-behavior=load_result_in_popup] :submit", throttledVoteCallback);

  // UI Elements that affect map state
  locate_feature.click( function(event) {
    Map.shareabout("locateNewFeature");
    $(this).hide();
    finalize_feature.show();

    // Reset filtering
    $('#map-container').hiderslider('reset');
  });

  finalize_feature.click( function(event) {
    var newFeature = Map.shareabout("getNewFeatureMarker"),
        latlng     = newFeature._visible ? newFeature.getLatLng() : Map.shareabout("getMap").getCenter(),
        data       = latLngToQueryString(latlng);

    $.getJSON("<%= url_help.within_region_feature_points_path %>", data, function(data){
      if (!data || data.status != "error") { // Location is good
        Map.shareabout("loadNewFeatureForm", {
          url : '<%= url_help.new_feature_point_path %>'
        });
        $(this).hide();
      } else Map.shareabout("showHint", data.message, newFeature);
    });
  });

  // Display static pages in the popup
  var showPage = function(url) {
    $.get(url, function(data){
      Map.shareabout("openPopup", data.view);

      // Reset the url when opening a page
      if (window.history && window.history.pushState) {
        window.history.pushState(null, null, '/');
      }
    }, "json");
  };

  // Display static pages in the popup when a link is clicked
  pages.click(function(click){
    click.preventDefault();
    showPage($(click.target).attr("href"));
  });

  // Show the welcome page on page load ONLY if not starting with a feature visible
  if (pages.is('[data-welcome-page]') && !window.shareabouts.feature) {
    showPage(pages.filter('[data-welcome-page]').attr("href"));
  }

  // Focus the permalink text on focus
  $(document).on('focus', '.copy-link', function(){
    this.select();
  });

  // Show the permalink and allow it to be copied
  $(document).on('click', '.link', function(e){
    var $input = $('.copy-link');

    $input.toggle();
    if($input.is(':visible')) {
      $input.focus();
    }

    e.preventDefault();
  });

  // Desktop only
  if ( !Map.shareabout("smallScreen") ) {
    // Start the ticker
    $("#ticker").activityticker({
      url    : "<%= url_help.activity_index_path %>",
      toggle : function(e){
        $("#content").toggleClass("ticker_on");
      },
      click: function(e, ui) {
        e.preventDefault();
        Map.shareabout('viewFeature', ui.featureId);

        // Reset filtering
        $('#map-container').hiderslider('reset');
      }
    });
  }

  // Show the hidden comment form
  $(".reply-link").live("click", function(e) {
    $("#reply").removeClass("hide");
  });

  // Label checkbox toggle
  $("label.checkbox-button input:checkbox").live("click", function(e){
    $(this).closest("label").toggleClass("checked");
  });

  // Toggle the mobile nav menu
  $('#pages').click(function(){
    $('#pages ul').toggleClass('active');
  });
});